@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ConvertBookmarkExpenseCommand" as ConvertBookmarkExpenseCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

box BookmarkExpense BOOKMARK_TRANSACTION__COLOR_T1
participant ":BookmarkExpenseList" as BookmarkExpenseList BOOKMARK_TRANSACTION_COLOR
participant ":BookmarkExpense" as BookmarkExpense BOOKMARK_TRANSACTION_COLOR
end box

[->LogicManager: execute(command)
activate LogicManager

ref over LogicManager : parse user input to create ConvertBookmarkExpenseCommand

create ConvertBookmarkExpenseCommand
LogicManager -> ConvertBookmarkExpenseCommand: execute(model)
activate ConvertBookmarkExpenseCommand

ConvertBookmarkExpenseCommand -> ModelManager: getFilteredBookmarkExpenseList()
activate ModelManager

ModelManager --> ConvertBookmarkExpenseCommand: bookmarkExpenseList
deactivate ModelManager

ConvertBookmarkExpenseCommand -> BookmarkExpenseList: bookmarkExpenseList.get()
activate BookmarkExpenseList

BookmarkExpenseList --> ConvertBookmarkExpenseCommand: bookmarkExpenseToConvert
deactivate BookmarkExpenseList

ConvertBookmarkExpenseCommand -> BookmarkExpense: bookmarkExpenseToConvert.convert()
activate BookmarkExpense

BookmarkExpense --> ConvertBookmarkExpenseCommand: newConvertedExpense
deactivate BookmarkExpense

ConvertBookmarkExpenseCommand -> ModelManager: addExpense(newConvertedExpense)
activate ModelManager

ModelManager --> ConvertBookmarkExpenseCommand
deactivate ModelManager

create CommandResult
ConvertBookmarkExpenseCommand -> CommandResult
activate CommandResult


CommandResult --> ConvertBookmarkExpenseCommand
deactivate CommandResult

ConvertBookmarkExpenseCommand --> LogicManager: result
deactivate ConvertBookmarkExpenseCommand

[<-- LogicManager: result
deactivate LogicManager

@enduml
